package facade.amazonaws.services.amplify

import scalajs._

type DomainStatus = "PENDING_VERIFICATION" | "IN_PROGRESS" | "AVAILABLE" | "PENDING_DEPLOYMENT" | "FAILED" | "CREATING" | "REQUESTING_CERTIFICATE" | "UPDATING"
object DomainStatus {
  val PENDING_VERIFICATION: "PENDING_VERIFICATION" = "PENDING_VERIFICATION"
  val IN_PROGRESS: "IN_PROGRESS" = "IN_PROGRESS"
  val AVAILABLE: "AVAILABLE" = "AVAILABLE"
  val PENDING_DEPLOYMENT: "PENDING_DEPLOYMENT" = "PENDING_DEPLOYMENT"
  val FAILED: "FAILED" = "FAILED"
  val CREATING: "CREATING" = "CREATING"
  val REQUESTING_CERTIFICATE: "REQUESTING_CERTIFICATE" = "REQUESTING_CERTIFICATE"
  val UPDATING: "UPDATING" = "UPDATING"

  @inline def values = js.Array[DomainStatus](PENDING_VERIFICATION, IN_PROGRESS, AVAILABLE, PENDING_DEPLOYMENT, FAILED, CREATING, REQUESTING_CERTIFICATE, UPDATING)
}

type JobStatus = "PENDING" | "PROVISIONING" | "RUNNING" | "FAILED" | "SUCCEED" | "CANCELLING" | "CANCELLED"
object JobStatus {
  val PENDING: "PENDING" = "PENDING"
  val PROVISIONING: "PROVISIONING" = "PROVISIONING"
  val RUNNING: "RUNNING" = "RUNNING"
  val FAILED: "FAILED" = "FAILED"
  val SUCCEED: "SUCCEED" = "SUCCEED"
  val CANCELLING: "CANCELLING" = "CANCELLING"
  val CANCELLED: "CANCELLED" = "CANCELLED"

  @inline def values = js.Array[JobStatus](PENDING, PROVISIONING, RUNNING, FAILED, SUCCEED, CANCELLING, CANCELLED)
}

type JobType = "RELEASE" | "RETRY" | "MANUAL" | "WEB_HOOK"
object JobType {
  val RELEASE: "RELEASE" = "RELEASE"
  val RETRY: "RETRY" = "RETRY"
  val MANUAL: "MANUAL" = "MANUAL"
  val WEB_HOOK: "WEB_HOOK" = "WEB_HOOK"

  @inline def values = js.Array[JobType](RELEASE, RETRY, MANUAL, WEB_HOOK)
}

type Platform = "WEB"
object Platform {
  val WEB: "WEB" = "WEB"

  @inline def values = js.Array[Platform](WEB)
}

type Stage = "PRODUCTION" | "BETA" | "DEVELOPMENT" | "EXPERIMENTAL" | "PULL_REQUEST"
object Stage {
  val PRODUCTION: "PRODUCTION" = "PRODUCTION"
  val BETA: "BETA" = "BETA"
  val DEVELOPMENT: "DEVELOPMENT" = "DEVELOPMENT"
  val EXPERIMENTAL: "EXPERIMENTAL" = "EXPERIMENTAL"
  val PULL_REQUEST: "PULL_REQUEST" = "PULL_REQUEST"

  @inline def values = js.Array[Stage](PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST)
}
