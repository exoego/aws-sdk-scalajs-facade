package facade.amazonaws.services.customerprofiles

import scalajs._

type DataPullMode = "Incremental" | "Complete"
object DataPullMode {
  val Incremental: "Incremental" = "Incremental"
  val Complete: "Complete" = "Complete"

  @inline def values = js.Array[DataPullMode](Incremental, Complete)
}

type FieldContentType = "STRING" | "NUMBER" | "PHONE_NUMBER" | "EMAIL_ADDRESS" | "NAME"
object FieldContentType {
  val STRING: "STRING" = "STRING"
  val NUMBER: "NUMBER" = "NUMBER"
  val PHONE_NUMBER: "PHONE_NUMBER" = "PHONE_NUMBER"
  val EMAIL_ADDRESS: "EMAIL_ADDRESS" = "EMAIL_ADDRESS"
  val NAME: "NAME" = "NAME"

  @inline def values = js.Array[FieldContentType](STRING, NUMBER, PHONE_NUMBER, EMAIL_ADDRESS, NAME)
}

type Gender = "MALE" | "FEMALE" | "UNSPECIFIED"
object Gender {
  val MALE: "MALE" = "MALE"
  val FEMALE: "FEMALE" = "FEMALE"
  val UNSPECIFIED: "UNSPECIFIED" = "UNSPECIFIED"

  @inline def values = js.Array[Gender](MALE, FEMALE, UNSPECIFIED)
}

type MarketoConnectorOperator = "PROJECTION" | "LESS_THAN" | "GREATER_THAN" | "BETWEEN" | "ADDITION" | "MULTIPLICATION" | "DIVISION" | "SUBTRACTION" | "MASK_ALL" | "MASK_FIRST_N" | "MASK_LAST_N" | "VALIDATE_NON_NULL" | "VALIDATE_NON_ZERO" | "VALIDATE_NON_NEGATIVE" | "VALIDATE_NUMERIC" | "NO_OP"
object MarketoConnectorOperator {
  val PROJECTION: "PROJECTION" = "PROJECTION"
  val LESS_THAN: "LESS_THAN" = "LESS_THAN"
  val GREATER_THAN: "GREATER_THAN" = "GREATER_THAN"
  val BETWEEN: "BETWEEN" = "BETWEEN"
  val ADDITION: "ADDITION" = "ADDITION"
  val MULTIPLICATION: "MULTIPLICATION" = "MULTIPLICATION"
  val DIVISION: "DIVISION" = "DIVISION"
  val SUBTRACTION: "SUBTRACTION" = "SUBTRACTION"
  val MASK_ALL: "MASK_ALL" = "MASK_ALL"
  val MASK_FIRST_N: "MASK_FIRST_N" = "MASK_FIRST_N"
  val MASK_LAST_N: "MASK_LAST_N" = "MASK_LAST_N"
  val VALIDATE_NON_NULL: "VALIDATE_NON_NULL" = "VALIDATE_NON_NULL"
  val VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO" = "VALIDATE_NON_ZERO"
  val VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE" = "VALIDATE_NON_NEGATIVE"
  val VALIDATE_NUMERIC: "VALIDATE_NUMERIC" = "VALIDATE_NUMERIC"
  val NO_OP: "NO_OP" = "NO_OP"

  @inline def values = js.Array[MarketoConnectorOperator](
    PROJECTION,
    LESS_THAN,
    GREATER_THAN,
    BETWEEN,
    ADDITION,
    MULTIPLICATION,
    DIVISION,
    SUBTRACTION,
    MASK_ALL,
    MASK_FIRST_N,
    MASK_LAST_N,
    VALIDATE_NON_NULL,
    VALIDATE_NON_ZERO,
    VALIDATE_NON_NEGATIVE,
    VALIDATE_NUMERIC,
    NO_OP
  )
}

type OperatorPropertiesKeys = "VALUE" | "VALUES" | "DATA_TYPE" | "UPPER_BOUND" | "LOWER_BOUND" | "SOURCE_DATA_TYPE" | "DESTINATION_DATA_TYPE" | "VALIDATION_ACTION" | "MASK_VALUE" | "MASK_LENGTH" | "TRUNCATE_LENGTH" | "MATH_OPERATION_FIELDS_ORDER" | "CONCAT_FORMAT" | "SUBFIELD_CATEGORY_MAP"
object OperatorPropertiesKeys {
  val VALUE: "VALUE" = "VALUE"
  val VALUES: "VALUES" = "VALUES"
  val DATA_TYPE: "DATA_TYPE" = "DATA_TYPE"
  val UPPER_BOUND: "UPPER_BOUND" = "UPPER_BOUND"
  val LOWER_BOUND: "LOWER_BOUND" = "LOWER_BOUND"
  val SOURCE_DATA_TYPE: "SOURCE_DATA_TYPE" = "SOURCE_DATA_TYPE"
  val DESTINATION_DATA_TYPE: "DESTINATION_DATA_TYPE" = "DESTINATION_DATA_TYPE"
  val VALIDATION_ACTION: "VALIDATION_ACTION" = "VALIDATION_ACTION"
  val MASK_VALUE: "MASK_VALUE" = "MASK_VALUE"
  val MASK_LENGTH: "MASK_LENGTH" = "MASK_LENGTH"
  val TRUNCATE_LENGTH: "TRUNCATE_LENGTH" = "TRUNCATE_LENGTH"
  val MATH_OPERATION_FIELDS_ORDER: "MATH_OPERATION_FIELDS_ORDER" = "MATH_OPERATION_FIELDS_ORDER"
  val CONCAT_FORMAT: "CONCAT_FORMAT" = "CONCAT_FORMAT"
  val SUBFIELD_CATEGORY_MAP: "SUBFIELD_CATEGORY_MAP" = "SUBFIELD_CATEGORY_MAP"

  @inline def values = js.Array[OperatorPropertiesKeys](
    VALUE,
    VALUES,
    DATA_TYPE,
    UPPER_BOUND,
    LOWER_BOUND,
    SOURCE_DATA_TYPE,
    DESTINATION_DATA_TYPE,
    VALIDATION_ACTION,
    MASK_VALUE,
    MASK_LENGTH,
    TRUNCATE_LENGTH,
    MATH_OPERATION_FIELDS_ORDER,
    CONCAT_FORMAT,
    SUBFIELD_CATEGORY_MAP
  )
}

type PartyType = "INDIVIDUAL" | "BUSINESS" | "OTHER"
object PartyType {
  val INDIVIDUAL: "INDIVIDUAL" = "INDIVIDUAL"
  val BUSINESS: "BUSINESS" = "BUSINESS"
  val OTHER: "OTHER" = "OTHER"

  @inline def values = js.Array[PartyType](INDIVIDUAL, BUSINESS, OTHER)
}

type S3ConnectorOperator = "PROJECTION" | "LESS_THAN" | "GREATER_THAN" | "BETWEEN" | "LESS_THAN_OR_EQUAL_TO" | "GREATER_THAN_OR_EQUAL_TO" | "EQUAL_TO" | "NOT_EQUAL_TO" | "ADDITION" | "MULTIPLICATION" | "DIVISION" | "SUBTRACTION" | "MASK_ALL" | "MASK_FIRST_N" | "MASK_LAST_N" | "VALIDATE_NON_NULL" | "VALIDATE_NON_ZERO" | "VALIDATE_NON_NEGATIVE" | "VALIDATE_NUMERIC" | "NO_OP"
object S3ConnectorOperator {
  val PROJECTION: "PROJECTION" = "PROJECTION"
  val LESS_THAN: "LESS_THAN" = "LESS_THAN"
  val GREATER_THAN: "GREATER_THAN" = "GREATER_THAN"
  val BETWEEN: "BETWEEN" = "BETWEEN"
  val LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO" = "LESS_THAN_OR_EQUAL_TO"
  val GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO" = "GREATER_THAN_OR_EQUAL_TO"
  val EQUAL_TO: "EQUAL_TO" = "EQUAL_TO"
  val NOT_EQUAL_TO: "NOT_EQUAL_TO" = "NOT_EQUAL_TO"
  val ADDITION: "ADDITION" = "ADDITION"
  val MULTIPLICATION: "MULTIPLICATION" = "MULTIPLICATION"
  val DIVISION: "DIVISION" = "DIVISION"
  val SUBTRACTION: "SUBTRACTION" = "SUBTRACTION"
  val MASK_ALL: "MASK_ALL" = "MASK_ALL"
  val MASK_FIRST_N: "MASK_FIRST_N" = "MASK_FIRST_N"
  val MASK_LAST_N: "MASK_LAST_N" = "MASK_LAST_N"
  val VALIDATE_NON_NULL: "VALIDATE_NON_NULL" = "VALIDATE_NON_NULL"
  val VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO" = "VALIDATE_NON_ZERO"
  val VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE" = "VALIDATE_NON_NEGATIVE"
  val VALIDATE_NUMERIC: "VALIDATE_NUMERIC" = "VALIDATE_NUMERIC"
  val NO_OP: "NO_OP" = "NO_OP"

  @inline def values = js.Array[S3ConnectorOperator](
    PROJECTION,
    LESS_THAN,
    GREATER_THAN,
    BETWEEN,
    LESS_THAN_OR_EQUAL_TO,
    GREATER_THAN_OR_EQUAL_TO,
    EQUAL_TO,
    NOT_EQUAL_TO,
    ADDITION,
    MULTIPLICATION,
    DIVISION,
    SUBTRACTION,
    MASK_ALL,
    MASK_FIRST_N,
    MASK_LAST_N,
    VALIDATE_NON_NULL,
    VALIDATE_NON_ZERO,
    VALIDATE_NON_NEGATIVE,
    VALIDATE_NUMERIC,
    NO_OP
  )
}

type SalesforceConnectorOperator = "PROJECTION" | "LESS_THAN" | "CONTAINS" | "GREATER_THAN" | "BETWEEN" | "LESS_THAN_OR_EQUAL_TO" | "GREATER_THAN_OR_EQUAL_TO" | "EQUAL_TO" | "NOT_EQUAL_TO" | "ADDITION" | "MULTIPLICATION" | "DIVISION" | "SUBTRACTION" | "MASK_ALL" | "MASK_FIRST_N" | "MASK_LAST_N" | "VALIDATE_NON_NULL" | "VALIDATE_NON_ZERO" | "VALIDATE_NON_NEGATIVE" | "VALIDATE_NUMERIC" | "NO_OP"
object SalesforceConnectorOperator {
  val PROJECTION: "PROJECTION" = "PROJECTION"
  val LESS_THAN: "LESS_THAN" = "LESS_THAN"
  val CONTAINS: "CONTAINS" = "CONTAINS"
  val GREATER_THAN: "GREATER_THAN" = "GREATER_THAN"
  val BETWEEN: "BETWEEN" = "BETWEEN"
  val LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO" = "LESS_THAN_OR_EQUAL_TO"
  val GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO" = "GREATER_THAN_OR_EQUAL_TO"
  val EQUAL_TO: "EQUAL_TO" = "EQUAL_TO"
  val NOT_EQUAL_TO: "NOT_EQUAL_TO" = "NOT_EQUAL_TO"
  val ADDITION: "ADDITION" = "ADDITION"
  val MULTIPLICATION: "MULTIPLICATION" = "MULTIPLICATION"
  val DIVISION: "DIVISION" = "DIVISION"
  val SUBTRACTION: "SUBTRACTION" = "SUBTRACTION"
  val MASK_ALL: "MASK_ALL" = "MASK_ALL"
  val MASK_FIRST_N: "MASK_FIRST_N" = "MASK_FIRST_N"
  val MASK_LAST_N: "MASK_LAST_N" = "MASK_LAST_N"
  val VALIDATE_NON_NULL: "VALIDATE_NON_NULL" = "VALIDATE_NON_NULL"
  val VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO" = "VALIDATE_NON_ZERO"
  val VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE" = "VALIDATE_NON_NEGATIVE"
  val VALIDATE_NUMERIC: "VALIDATE_NUMERIC" = "VALIDATE_NUMERIC"
  val NO_OP: "NO_OP" = "NO_OP"

  @inline def values = js.Array[SalesforceConnectorOperator](
    PROJECTION,
    LESS_THAN,
    CONTAINS,
    GREATER_THAN,
    BETWEEN,
    LESS_THAN_OR_EQUAL_TO,
    GREATER_THAN_OR_EQUAL_TO,
    EQUAL_TO,
    NOT_EQUAL_TO,
    ADDITION,
    MULTIPLICATION,
    DIVISION,
    SUBTRACTION,
    MASK_ALL,
    MASK_FIRST_N,
    MASK_LAST_N,
    VALIDATE_NON_NULL,
    VALIDATE_NON_ZERO,
    VALIDATE_NON_NEGATIVE,
    VALIDATE_NUMERIC,
    NO_OP
  )
}

type ServiceNowConnectorOperator = "PROJECTION" | "CONTAINS" | "LESS_THAN" | "GREATER_THAN" | "BETWEEN" | "LESS_THAN_OR_EQUAL_TO" | "GREATER_THAN_OR_EQUAL_TO" | "EQUAL_TO" | "NOT_EQUAL_TO" | "ADDITION" | "MULTIPLICATION" | "DIVISION" | "SUBTRACTION" | "MASK_ALL" | "MASK_FIRST_N" | "MASK_LAST_N" | "VALIDATE_NON_NULL" | "VALIDATE_NON_ZERO" | "VALIDATE_NON_NEGATIVE" | "VALIDATE_NUMERIC" | "NO_OP"
object ServiceNowConnectorOperator {
  val PROJECTION: "PROJECTION" = "PROJECTION"
  val CONTAINS: "CONTAINS" = "CONTAINS"
  val LESS_THAN: "LESS_THAN" = "LESS_THAN"
  val GREATER_THAN: "GREATER_THAN" = "GREATER_THAN"
  val BETWEEN: "BETWEEN" = "BETWEEN"
  val LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO" = "LESS_THAN_OR_EQUAL_TO"
  val GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO" = "GREATER_THAN_OR_EQUAL_TO"
  val EQUAL_TO: "EQUAL_TO" = "EQUAL_TO"
  val NOT_EQUAL_TO: "NOT_EQUAL_TO" = "NOT_EQUAL_TO"
  val ADDITION: "ADDITION" = "ADDITION"
  val MULTIPLICATION: "MULTIPLICATION" = "MULTIPLICATION"
  val DIVISION: "DIVISION" = "DIVISION"
  val SUBTRACTION: "SUBTRACTION" = "SUBTRACTION"
  val MASK_ALL: "MASK_ALL" = "MASK_ALL"
  val MASK_FIRST_N: "MASK_FIRST_N" = "MASK_FIRST_N"
  val MASK_LAST_N: "MASK_LAST_N" = "MASK_LAST_N"
  val VALIDATE_NON_NULL: "VALIDATE_NON_NULL" = "VALIDATE_NON_NULL"
  val VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO" = "VALIDATE_NON_ZERO"
  val VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE" = "VALIDATE_NON_NEGATIVE"
  val VALIDATE_NUMERIC: "VALIDATE_NUMERIC" = "VALIDATE_NUMERIC"
  val NO_OP: "NO_OP" = "NO_OP"

  @inline def values = js.Array[ServiceNowConnectorOperator](
    PROJECTION,
    CONTAINS,
    LESS_THAN,
    GREATER_THAN,
    BETWEEN,
    LESS_THAN_OR_EQUAL_TO,
    GREATER_THAN_OR_EQUAL_TO,
    EQUAL_TO,
    NOT_EQUAL_TO,
    ADDITION,
    MULTIPLICATION,
    DIVISION,
    SUBTRACTION,
    MASK_ALL,
    MASK_FIRST_N,
    MASK_LAST_N,
    VALIDATE_NON_NULL,
    VALIDATE_NON_ZERO,
    VALIDATE_NON_NEGATIVE,
    VALIDATE_NUMERIC,
    NO_OP
  )
}

type SourceConnectorType = "Salesforce" | "Marketo" | "Zendesk" | "Servicenow" | "S3"
object SourceConnectorType {
  val Salesforce: "Salesforce" = "Salesforce"
  val Marketo: "Marketo" = "Marketo"
  val Zendesk: "Zendesk" = "Zendesk"
  val Servicenow: "Servicenow" = "Servicenow"
  val S3: "S3" = "S3"

  @inline def values = js.Array[SourceConnectorType](Salesforce, Marketo, Zendesk, Servicenow, S3)
}

type StandardIdentifier = "PROFILE" | "UNIQUE" | "SECONDARY" | "LOOKUP_ONLY" | "NEW_ONLY"
object StandardIdentifier {
  val PROFILE: "PROFILE" = "PROFILE"
  val UNIQUE: "UNIQUE" = "UNIQUE"
  val SECONDARY: "SECONDARY" = "SECONDARY"
  val LOOKUP_ONLY: "LOOKUP_ONLY" = "LOOKUP_ONLY"
  val NEW_ONLY: "NEW_ONLY" = "NEW_ONLY"

  @inline def values = js.Array[StandardIdentifier](PROFILE, UNIQUE, SECONDARY, LOOKUP_ONLY, NEW_ONLY)
}

type TaskType = "Arithmetic" | "Filter" | "Map" | "Mask" | "Merge" | "Truncate" | "Validate"
object TaskType {
  val Arithmetic: "Arithmetic" = "Arithmetic"
  val Filter: "Filter" = "Filter"
  val Map: "Map" = "Map"
  val Mask: "Mask" = "Mask"
  val Merge: "Merge" = "Merge"
  val Truncate: "Truncate" = "Truncate"
  val Validate: "Validate" = "Validate"

  @inline def values = js.Array[TaskType](Arithmetic, Filter, Map, Mask, Merge, Truncate, Validate)
}

type TriggerType = "Scheduled" | "Event" | "OnDemand"
object TriggerType {
  val Scheduled: "Scheduled" = "Scheduled"
  val Event: "Event" = "Event"
  val OnDemand: "OnDemand" = "OnDemand"

  @inline def values = js.Array[TriggerType](Scheduled, Event, OnDemand)
}

type ZendeskConnectorOperator = "PROJECTION" | "GREATER_THAN" | "ADDITION" | "MULTIPLICATION" | "DIVISION" | "SUBTRACTION" | "MASK_ALL" | "MASK_FIRST_N" | "MASK_LAST_N" | "VALIDATE_NON_NULL" | "VALIDATE_NON_ZERO" | "VALIDATE_NON_NEGATIVE" | "VALIDATE_NUMERIC" | "NO_OP"
object ZendeskConnectorOperator {
  val PROJECTION: "PROJECTION" = "PROJECTION"
  val GREATER_THAN: "GREATER_THAN" = "GREATER_THAN"
  val ADDITION: "ADDITION" = "ADDITION"
  val MULTIPLICATION: "MULTIPLICATION" = "MULTIPLICATION"
  val DIVISION: "DIVISION" = "DIVISION"
  val SUBTRACTION: "SUBTRACTION" = "SUBTRACTION"
  val MASK_ALL: "MASK_ALL" = "MASK_ALL"
  val MASK_FIRST_N: "MASK_FIRST_N" = "MASK_FIRST_N"
  val MASK_LAST_N: "MASK_LAST_N" = "MASK_LAST_N"
  val VALIDATE_NON_NULL: "VALIDATE_NON_NULL" = "VALIDATE_NON_NULL"
  val VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO" = "VALIDATE_NON_ZERO"
  val VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE" = "VALIDATE_NON_NEGATIVE"
  val VALIDATE_NUMERIC: "VALIDATE_NUMERIC" = "VALIDATE_NUMERIC"
  val NO_OP: "NO_OP" = "NO_OP"

  @inline def values = js.Array[ZendeskConnectorOperator](
    PROJECTION,
    GREATER_THAN,
    ADDITION,
    MULTIPLICATION,
    DIVISION,
    SUBTRACTION,
    MASK_ALL,
    MASK_FIRST_N,
    MASK_LAST_N,
    VALIDATE_NON_NULL,
    VALIDATE_NON_ZERO,
    VALIDATE_NON_NEGATIVE,
    VALIDATE_NUMERIC,
    NO_OP
  )
}
