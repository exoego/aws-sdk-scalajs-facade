package facade.amazonaws.services.backup

import scalajs._

type BackupJobState = "CREATED" | "PENDING" | "RUNNING" | "ABORTING" | "ABORTED" | "COMPLETED" | "FAILED" | "EXPIRED"
object BackupJobState {
  val CREATED: "CREATED" = "CREATED"
  val PENDING: "PENDING" = "PENDING"
  val RUNNING: "RUNNING" = "RUNNING"
  val ABORTING: "ABORTING" = "ABORTING"
  val ABORTED: "ABORTED" = "ABORTED"
  val COMPLETED: "COMPLETED" = "COMPLETED"
  val FAILED: "FAILED" = "FAILED"
  val EXPIRED: "EXPIRED" = "EXPIRED"

  @inline def values = js.Array[BackupJobState](CREATED, PENDING, RUNNING, ABORTING, ABORTED, COMPLETED, FAILED, EXPIRED)
}

type BackupVaultEvent = "BACKUP_JOB_STARTED" | "BACKUP_JOB_COMPLETED" | "BACKUP_JOB_SUCCESSFUL" | "BACKUP_JOB_FAILED" | "BACKUP_JOB_EXPIRED" | "RESTORE_JOB_STARTED" | "RESTORE_JOB_COMPLETED" | "RESTORE_JOB_SUCCESSFUL" | "RESTORE_JOB_FAILED" | "COPY_JOB_STARTED" | "COPY_JOB_SUCCESSFUL" | "COPY_JOB_FAILED" | "RECOVERY_POINT_MODIFIED" | "BACKUP_PLAN_CREATED" | "BACKUP_PLAN_MODIFIED"
object BackupVaultEvent {
  val BACKUP_JOB_STARTED: "BACKUP_JOB_STARTED" = "BACKUP_JOB_STARTED"
  val BACKUP_JOB_COMPLETED: "BACKUP_JOB_COMPLETED" = "BACKUP_JOB_COMPLETED"
  val BACKUP_JOB_SUCCESSFUL: "BACKUP_JOB_SUCCESSFUL" = "BACKUP_JOB_SUCCESSFUL"
  val BACKUP_JOB_FAILED: "BACKUP_JOB_FAILED" = "BACKUP_JOB_FAILED"
  val BACKUP_JOB_EXPIRED: "BACKUP_JOB_EXPIRED" = "BACKUP_JOB_EXPIRED"
  val RESTORE_JOB_STARTED: "RESTORE_JOB_STARTED" = "RESTORE_JOB_STARTED"
  val RESTORE_JOB_COMPLETED: "RESTORE_JOB_COMPLETED" = "RESTORE_JOB_COMPLETED"
  val RESTORE_JOB_SUCCESSFUL: "RESTORE_JOB_SUCCESSFUL" = "RESTORE_JOB_SUCCESSFUL"
  val RESTORE_JOB_FAILED: "RESTORE_JOB_FAILED" = "RESTORE_JOB_FAILED"
  val COPY_JOB_STARTED: "COPY_JOB_STARTED" = "COPY_JOB_STARTED"
  val COPY_JOB_SUCCESSFUL: "COPY_JOB_SUCCESSFUL" = "COPY_JOB_SUCCESSFUL"
  val COPY_JOB_FAILED: "COPY_JOB_FAILED" = "COPY_JOB_FAILED"
  val RECOVERY_POINT_MODIFIED: "RECOVERY_POINT_MODIFIED" = "RECOVERY_POINT_MODIFIED"
  val BACKUP_PLAN_CREATED: "BACKUP_PLAN_CREATED" = "BACKUP_PLAN_CREATED"
  val BACKUP_PLAN_MODIFIED: "BACKUP_PLAN_MODIFIED" = "BACKUP_PLAN_MODIFIED"

  @inline def values = js.Array[BackupVaultEvent](
    BACKUP_JOB_STARTED,
    BACKUP_JOB_COMPLETED,
    BACKUP_JOB_SUCCESSFUL,
    BACKUP_JOB_FAILED,
    BACKUP_JOB_EXPIRED,
    RESTORE_JOB_STARTED,
    RESTORE_JOB_COMPLETED,
    RESTORE_JOB_SUCCESSFUL,
    RESTORE_JOB_FAILED,
    COPY_JOB_STARTED,
    COPY_JOB_SUCCESSFUL,
    COPY_JOB_FAILED,
    RECOVERY_POINT_MODIFIED,
    BACKUP_PLAN_CREATED,
    BACKUP_PLAN_MODIFIED
  )
}

type ConditionType = "STRINGEQUALS"
object ConditionType {
  val STRINGEQUALS: "STRINGEQUALS" = "STRINGEQUALS"

  @inline def values = js.Array[ConditionType](STRINGEQUALS)
}

type CopyJobState = "CREATED" | "RUNNING" | "COMPLETED" | "FAILED"
object CopyJobState {
  val CREATED: "CREATED" = "CREATED"
  val RUNNING: "RUNNING" = "RUNNING"
  val COMPLETED: "COMPLETED" = "COMPLETED"
  val FAILED: "FAILED" = "FAILED"

  @inline def values = js.Array[CopyJobState](CREATED, RUNNING, COMPLETED, FAILED)
}

type RecoveryPointStatus = "COMPLETED" | "PARTIAL" | "DELETING" | "EXPIRED"
object RecoveryPointStatus {
  val COMPLETED: "COMPLETED" = "COMPLETED"
  val PARTIAL: "PARTIAL" = "PARTIAL"
  val DELETING: "DELETING" = "DELETING"
  val EXPIRED: "EXPIRED" = "EXPIRED"

  @inline def values = js.Array[RecoveryPointStatus](COMPLETED, PARTIAL, DELETING, EXPIRED)
}

type RestoreJobStatus = "PENDING" | "RUNNING" | "COMPLETED" | "ABORTED" | "FAILED"
object RestoreJobStatus {
  val PENDING: "PENDING" = "PENDING"
  val RUNNING: "RUNNING" = "RUNNING"
  val COMPLETED: "COMPLETED" = "COMPLETED"
  val ABORTED: "ABORTED" = "ABORTED"
  val FAILED: "FAILED" = "FAILED"

  @inline def values = js.Array[RestoreJobStatus](PENDING, RUNNING, COMPLETED, ABORTED, FAILED)
}

type StorageClass = "WARM" | "COLD" | "DELETED"
object StorageClass {
  val WARM: "WARM" = "WARM"
  val COLD: "COLD" = "COLD"
  val DELETED: "DELETED" = "DELETED"

  @inline def values = js.Array[StorageClass](WARM, COLD, DELETED)
}
