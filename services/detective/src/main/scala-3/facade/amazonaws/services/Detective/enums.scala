package facade.amazonaws.services.detective

import scalajs._

type MemberDisabledReason = "VOLUME_TOO_HIGH" | "VOLUME_UNKNOWN"
object MemberDisabledReason {
  val VOLUME_TOO_HIGH: "VOLUME_TOO_HIGH" = "VOLUME_TOO_HIGH"
  val VOLUME_UNKNOWN: "VOLUME_UNKNOWN" = "VOLUME_UNKNOWN"

  @inline def values = js.Array[MemberDisabledReason](VOLUME_TOO_HIGH, VOLUME_UNKNOWN)
}

type MemberStatus = "INVITED" | "VERIFICATION_IN_PROGRESS" | "VERIFICATION_FAILED" | "ENABLED" | "ACCEPTED_BUT_DISABLED"
object MemberStatus {
  val INVITED: "INVITED" = "INVITED"
  val VERIFICATION_IN_PROGRESS: "VERIFICATION_IN_PROGRESS" = "VERIFICATION_IN_PROGRESS"
  val VERIFICATION_FAILED: "VERIFICATION_FAILED" = "VERIFICATION_FAILED"
  val ENABLED: "ENABLED" = "ENABLED"
  val ACCEPTED_BUT_DISABLED: "ACCEPTED_BUT_DISABLED" = "ACCEPTED_BUT_DISABLED"

  @inline def values = js.Array[MemberStatus](INVITED, VERIFICATION_IN_PROGRESS, VERIFICATION_FAILED, ENABLED, ACCEPTED_BUT_DISABLED)
}
