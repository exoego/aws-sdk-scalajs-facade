package facade.amazonaws.services.nimble

import scalajs.js

type LaunchProfilePersona = "USER"
object LaunchProfilePersona {
  inline val USER: "USER" = "USER"

  inline def values: js.Array[LaunchProfilePersona] = js.Array(USER)
}

type LaunchProfilePlatform = "LINUX" | "WINDOWS"
object LaunchProfilePlatform {
  inline val LINUX: "LINUX" = "LINUX"
  inline val WINDOWS: "WINDOWS" = "WINDOWS"

  inline def values: js.Array[LaunchProfilePlatform] = js.Array(LINUX, WINDOWS)
}

type LaunchProfileState = "CREATE_IN_PROGRESS" | "READY" | "UPDATE_IN_PROGRESS" | "DELETE_IN_PROGRESS" | "DELETED" | "DELETE_FAILED" | "CREATE_FAILED" | "UPDATE_FAILED"
object LaunchProfileState {
  inline val CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS" = "CREATE_IN_PROGRESS"
  inline val READY: "READY" = "READY"
  inline val UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS" = "UPDATE_IN_PROGRESS"
  inline val DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS" = "DELETE_IN_PROGRESS"
  inline val DELETED: "DELETED" = "DELETED"
  inline val DELETE_FAILED: "DELETE_FAILED" = "DELETE_FAILED"
  inline val CREATE_FAILED: "CREATE_FAILED" = "CREATE_FAILED"
  inline val UPDATE_FAILED: "UPDATE_FAILED" = "UPDATE_FAILED"

  inline def values: js.Array[LaunchProfileState] = js.Array(CREATE_IN_PROGRESS, READY, UPDATE_IN_PROGRESS, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, CREATE_FAILED, UPDATE_FAILED)
}

type LaunchProfileStatusCode = "LAUNCH_PROFILE_CREATED" | "LAUNCH_PROFILE_UPDATED" | "LAUNCH_PROFILE_DELETED" | "LAUNCH_PROFILE_CREATE_IN_PROGRESS" | "LAUNCH_PROFILE_UPDATE_IN_PROGRESS" | "LAUNCH_PROFILE_DELETE_IN_PROGRESS" | "INTERNAL_ERROR" | "STREAMING_IMAGE_NOT_FOUND" | "STREAMING_IMAGE_NOT_READY" | "LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED" | "ENCRYPTION_KEY_ACCESS_DENIED" | "ENCRYPTION_KEY_NOT_FOUND" | "INVALID_SUBNETS_PROVIDED" | "INVALID_INSTANCE_TYPES_PROVIDED" | "INVALID_SUBNETS_COMBINATION"
object LaunchProfileStatusCode {
  inline val LAUNCH_PROFILE_CREATED: "LAUNCH_PROFILE_CREATED" = "LAUNCH_PROFILE_CREATED"
  inline val LAUNCH_PROFILE_UPDATED: "LAUNCH_PROFILE_UPDATED" = "LAUNCH_PROFILE_UPDATED"
  inline val LAUNCH_PROFILE_DELETED: "LAUNCH_PROFILE_DELETED" = "LAUNCH_PROFILE_DELETED"
  inline val LAUNCH_PROFILE_CREATE_IN_PROGRESS: "LAUNCH_PROFILE_CREATE_IN_PROGRESS" = "LAUNCH_PROFILE_CREATE_IN_PROGRESS"
  inline val LAUNCH_PROFILE_UPDATE_IN_PROGRESS: "LAUNCH_PROFILE_UPDATE_IN_PROGRESS" = "LAUNCH_PROFILE_UPDATE_IN_PROGRESS"
  inline val LAUNCH_PROFILE_DELETE_IN_PROGRESS: "LAUNCH_PROFILE_DELETE_IN_PROGRESS" = "LAUNCH_PROFILE_DELETE_IN_PROGRESS"
  inline val INTERNAL_ERROR: "INTERNAL_ERROR" = "INTERNAL_ERROR"
  inline val STREAMING_IMAGE_NOT_FOUND: "STREAMING_IMAGE_NOT_FOUND" = "STREAMING_IMAGE_NOT_FOUND"
  inline val STREAMING_IMAGE_NOT_READY: "STREAMING_IMAGE_NOT_READY" = "STREAMING_IMAGE_NOT_READY"
  inline val LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED: "LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED" = "LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED"
  inline val ENCRYPTION_KEY_ACCESS_DENIED: "ENCRYPTION_KEY_ACCESS_DENIED" = "ENCRYPTION_KEY_ACCESS_DENIED"
  inline val ENCRYPTION_KEY_NOT_FOUND: "ENCRYPTION_KEY_NOT_FOUND" = "ENCRYPTION_KEY_NOT_FOUND"
  inline val INVALID_SUBNETS_PROVIDED: "INVALID_SUBNETS_PROVIDED" = "INVALID_SUBNETS_PROVIDED"
  inline val INVALID_INSTANCE_TYPES_PROVIDED: "INVALID_INSTANCE_TYPES_PROVIDED" = "INVALID_INSTANCE_TYPES_PROVIDED"
  inline val INVALID_SUBNETS_COMBINATION: "INVALID_SUBNETS_COMBINATION" = "INVALID_SUBNETS_COMBINATION"

  inline def values: js.Array[LaunchProfileStatusCode] = js.Array(
    LAUNCH_PROFILE_CREATED,
    LAUNCH_PROFILE_UPDATED,
    LAUNCH_PROFILE_DELETED,
    LAUNCH_PROFILE_CREATE_IN_PROGRESS,
    LAUNCH_PROFILE_UPDATE_IN_PROGRESS,
    LAUNCH_PROFILE_DELETE_IN_PROGRESS,
    INTERNAL_ERROR,
    STREAMING_IMAGE_NOT_FOUND,
    STREAMING_IMAGE_NOT_READY,
    LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED,
    ENCRYPTION_KEY_ACCESS_DENIED,
    ENCRYPTION_KEY_NOT_FOUND,
    INVALID_SUBNETS_PROVIDED,
    INVALID_INSTANCE_TYPES_PROVIDED,
    INVALID_SUBNETS_COMBINATION
  )
}

type LaunchProfileValidationState = "VALIDATION_NOT_STARTED" | "VALIDATION_IN_PROGRESS" | "VALIDATION_SUCCESS" | "VALIDATION_FAILED" | "VALIDATION_FAILED_INTERNAL_SERVER_ERROR"
object LaunchProfileValidationState {
  inline val VALIDATION_NOT_STARTED: "VALIDATION_NOT_STARTED" = "VALIDATION_NOT_STARTED"
  inline val VALIDATION_IN_PROGRESS: "VALIDATION_IN_PROGRESS" = "VALIDATION_IN_PROGRESS"
  inline val VALIDATION_SUCCESS: "VALIDATION_SUCCESS" = "VALIDATION_SUCCESS"
  inline val VALIDATION_FAILED: "VALIDATION_FAILED" = "VALIDATION_FAILED"
  inline val VALIDATION_FAILED_INTERNAL_SERVER_ERROR: "VALIDATION_FAILED_INTERNAL_SERVER_ERROR" = "VALIDATION_FAILED_INTERNAL_SERVER_ERROR"

  inline def values: js.Array[LaunchProfileValidationState] = js.Array(VALIDATION_NOT_STARTED, VALIDATION_IN_PROGRESS, VALIDATION_SUCCESS, VALIDATION_FAILED, VALIDATION_FAILED_INTERNAL_SERVER_ERROR)
}

type LaunchProfileValidationStatusCode = "VALIDATION_NOT_STARTED" | "VALIDATION_IN_PROGRESS" | "VALIDATION_SUCCESS" | "VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION" | "VALIDATION_FAILED_SUBNET_NOT_FOUND" | "VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION" | "VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY" | "VALIDATION_FAILED_UNAUTHORIZED" | "VALIDATION_FAILED_INTERNAL_SERVER_ERROR"
object LaunchProfileValidationStatusCode {
  inline val VALIDATION_NOT_STARTED: "VALIDATION_NOT_STARTED" = "VALIDATION_NOT_STARTED"
  inline val VALIDATION_IN_PROGRESS: "VALIDATION_IN_PROGRESS" = "VALIDATION_IN_PROGRESS"
  inline val VALIDATION_SUCCESS: "VALIDATION_SUCCESS" = "VALIDATION_SUCCESS"
  inline val VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION: "VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION" = "VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION"
  inline val VALIDATION_FAILED_SUBNET_NOT_FOUND: "VALIDATION_FAILED_SUBNET_NOT_FOUND" = "VALIDATION_FAILED_SUBNET_NOT_FOUND"
  inline val VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION: "VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION" = "VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION"
  inline val VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY: "VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY" = "VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY"
  inline val VALIDATION_FAILED_UNAUTHORIZED: "VALIDATION_FAILED_UNAUTHORIZED" = "VALIDATION_FAILED_UNAUTHORIZED"
  inline val VALIDATION_FAILED_INTERNAL_SERVER_ERROR: "VALIDATION_FAILED_INTERNAL_SERVER_ERROR" = "VALIDATION_FAILED_INTERNAL_SERVER_ERROR"

  inline def values: js.Array[LaunchProfileValidationStatusCode] = js.Array(
    VALIDATION_NOT_STARTED,
    VALIDATION_IN_PROGRESS,
    VALIDATION_SUCCESS,
    VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION,
    VALIDATION_FAILED_SUBNET_NOT_FOUND,
    VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION,
    VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY,
    VALIDATION_FAILED_UNAUTHORIZED,
    VALIDATION_FAILED_INTERNAL_SERVER_ERROR
  )
}

type LaunchProfileValidationType = "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT" | "VALIDATE_SUBNET_ASSOCIATION" | "VALIDATE_NETWORK_ACL_ASSOCIATION" | "VALIDATE_SECURITY_GROUP_ASSOCIATION"
object LaunchProfileValidationType {
  inline val VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT: "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT" = "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT"
  inline val VALIDATE_SUBNET_ASSOCIATION: "VALIDATE_SUBNET_ASSOCIATION" = "VALIDATE_SUBNET_ASSOCIATION"
  inline val VALIDATE_NETWORK_ACL_ASSOCIATION: "VALIDATE_NETWORK_ACL_ASSOCIATION" = "VALIDATE_NETWORK_ACL_ASSOCIATION"
  inline val VALIDATE_SECURITY_GROUP_ASSOCIATION: "VALIDATE_SECURITY_GROUP_ASSOCIATION" = "VALIDATE_SECURITY_GROUP_ASSOCIATION"

  inline def values: js.Array[LaunchProfileValidationType] = js.Array(VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT, VALIDATE_SUBNET_ASSOCIATION, VALIDATE_NETWORK_ACL_ASSOCIATION, VALIDATE_SECURITY_GROUP_ASSOCIATION)
}

type StreamingClipboardMode = "ENABLED" | "DISABLED"
object StreamingClipboardMode {
  inline val ENABLED: "ENABLED" = "ENABLED"
  inline val DISABLED: "DISABLED" = "DISABLED"

  inline def values: js.Array[StreamingClipboardMode] = js.Array(ENABLED, DISABLED)
}

type StreamingImageEncryptionConfigurationKeyType = "CUSTOMER_MANAGED_KEY"
object StreamingImageEncryptionConfigurationKeyType {
  inline val CUSTOMER_MANAGED_KEY: "CUSTOMER_MANAGED_KEY" = "CUSTOMER_MANAGED_KEY"

  inline def values: js.Array[StreamingImageEncryptionConfigurationKeyType] = js.Array(CUSTOMER_MANAGED_KEY)
}

type StreamingImageState = "CREATE_IN_PROGRESS" | "READY" | "DELETE_IN_PROGRESS" | "DELETED" | "UPDATE_IN_PROGRESS" | "UPDATE_FAILED" | "CREATE_FAILED" | "DELETE_FAILED"
object StreamingImageState {
  inline val CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS" = "CREATE_IN_PROGRESS"
  inline val READY: "READY" = "READY"
  inline val DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS" = "DELETE_IN_PROGRESS"
  inline val DELETED: "DELETED" = "DELETED"
  inline val UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS" = "UPDATE_IN_PROGRESS"
  inline val UPDATE_FAILED: "UPDATE_FAILED" = "UPDATE_FAILED"
  inline val CREATE_FAILED: "CREATE_FAILED" = "CREATE_FAILED"
  inline val DELETE_FAILED: "DELETE_FAILED" = "DELETE_FAILED"

  inline def values: js.Array[StreamingImageState] = js.Array(CREATE_IN_PROGRESS, READY, DELETE_IN_PROGRESS, DELETED, UPDATE_IN_PROGRESS, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED)
}

/** The status code.
  */
type StreamingImageStatusCode = "STREAMING_IMAGE_CREATE_IN_PROGRESS" | "STREAMING_IMAGE_READY" | "STREAMING_IMAGE_DELETE_IN_PROGRESS" | "STREAMING_IMAGE_DELETED" | "STREAMING_IMAGE_UPDATE_IN_PROGRESS" | "INTERNAL_ERROR" | "ACCESS_DENIED"
object StreamingImageStatusCode {
  inline val STREAMING_IMAGE_CREATE_IN_PROGRESS: "STREAMING_IMAGE_CREATE_IN_PROGRESS" = "STREAMING_IMAGE_CREATE_IN_PROGRESS"
  inline val STREAMING_IMAGE_READY: "STREAMING_IMAGE_READY" = "STREAMING_IMAGE_READY"
  inline val STREAMING_IMAGE_DELETE_IN_PROGRESS: "STREAMING_IMAGE_DELETE_IN_PROGRESS" = "STREAMING_IMAGE_DELETE_IN_PROGRESS"
  inline val STREAMING_IMAGE_DELETED: "STREAMING_IMAGE_DELETED" = "STREAMING_IMAGE_DELETED"
  inline val STREAMING_IMAGE_UPDATE_IN_PROGRESS: "STREAMING_IMAGE_UPDATE_IN_PROGRESS" = "STREAMING_IMAGE_UPDATE_IN_PROGRESS"
  inline val INTERNAL_ERROR: "INTERNAL_ERROR" = "INTERNAL_ERROR"
  inline val ACCESS_DENIED: "ACCESS_DENIED" = "ACCESS_DENIED"

  inline def values: js.Array[StreamingImageStatusCode] = js.Array(
    STREAMING_IMAGE_CREATE_IN_PROGRESS,
    STREAMING_IMAGE_READY,
    STREAMING_IMAGE_DELETE_IN_PROGRESS,
    STREAMING_IMAGE_DELETED,
    STREAMING_IMAGE_UPDATE_IN_PROGRESS,
    INTERNAL_ERROR,
    ACCESS_DENIED
  )
}

type StreamingInstanceType = "g4dn.xlarge" | "g4dn.2xlarge" | "g4dn.4xlarge" | "g4dn.8xlarge" | "g4dn.12xlarge" | "g4dn.16xlarge" | "g3.4xlarge" | "g3s.xlarge" | "g5.xlarge" | "g5.2xlarge" | "g5.4xlarge" | "g5.8xlarge" | "g5.16xlarge"
object StreamingInstanceType {
  inline val `g4dn.xlarge`: "g4dn.xlarge" = "g4dn.xlarge"
  inline val `g4dn.2xlarge`: "g4dn.2xlarge" = "g4dn.2xlarge"
  inline val `g4dn.4xlarge`: "g4dn.4xlarge" = "g4dn.4xlarge"
  inline val `g4dn.8xlarge`: "g4dn.8xlarge" = "g4dn.8xlarge"
  inline val `g4dn.12xlarge`: "g4dn.12xlarge" = "g4dn.12xlarge"
  inline val `g4dn.16xlarge`: "g4dn.16xlarge" = "g4dn.16xlarge"
  inline val `g3.4xlarge`: "g3.4xlarge" = "g3.4xlarge"
  inline val `g3s.xlarge`: "g3s.xlarge" = "g3s.xlarge"
  inline val `g5.xlarge`: "g5.xlarge" = "g5.xlarge"
  inline val `g5.2xlarge`: "g5.2xlarge" = "g5.2xlarge"
  inline val `g5.4xlarge`: "g5.4xlarge" = "g5.4xlarge"
  inline val `g5.8xlarge`: "g5.8xlarge" = "g5.8xlarge"
  inline val `g5.16xlarge`: "g5.16xlarge" = "g5.16xlarge"

  inline def values: js.Array[StreamingInstanceType] = js.Array(
    `g4dn.xlarge`,
    `g4dn.2xlarge`,
    `g4dn.4xlarge`,
    `g4dn.8xlarge`,
    `g4dn.12xlarge`,
    `g4dn.16xlarge`,
    `g3.4xlarge`,
    `g3s.xlarge`,
    `g5.xlarge`,
    `g5.2xlarge`,
    `g5.4xlarge`,
    `g5.8xlarge`,
    `g5.16xlarge`
  )
}

/** The streaming session state.
  */
type StreamingSessionState = "CREATE_IN_PROGRESS" | "DELETE_IN_PROGRESS" | "READY" | "DELETED" | "CREATE_FAILED" | "DELETE_FAILED" | "STOP_IN_PROGRESS" | "START_IN_PROGRESS" | "STOPPED" | "STOP_FAILED" | "START_FAILED"
object StreamingSessionState {
  inline val CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS" = "CREATE_IN_PROGRESS"
  inline val DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS" = "DELETE_IN_PROGRESS"
  inline val READY: "READY" = "READY"
  inline val DELETED: "DELETED" = "DELETED"
  inline val CREATE_FAILED: "CREATE_FAILED" = "CREATE_FAILED"
  inline val DELETE_FAILED: "DELETE_FAILED" = "DELETE_FAILED"
  inline val STOP_IN_PROGRESS: "STOP_IN_PROGRESS" = "STOP_IN_PROGRESS"
  inline val START_IN_PROGRESS: "START_IN_PROGRESS" = "START_IN_PROGRESS"
  inline val STOPPED: "STOPPED" = "STOPPED"
  inline val STOP_FAILED: "STOP_FAILED" = "STOP_FAILED"
  inline val START_FAILED: "START_FAILED" = "START_FAILED"

  inline def values: js.Array[StreamingSessionState] = js.Array(CREATE_IN_PROGRESS, DELETE_IN_PROGRESS, READY, DELETED, CREATE_FAILED, DELETE_FAILED, STOP_IN_PROGRESS, START_IN_PROGRESS, STOPPED, STOP_FAILED, START_FAILED)
}

type StreamingSessionStatusCode = "STREAMING_SESSION_READY" | "STREAMING_SESSION_DELETED" | "STREAMING_SESSION_CREATE_IN_PROGRESS" | "STREAMING_SESSION_DELETE_IN_PROGRESS" | "INTERNAL_ERROR" | "INSUFFICIENT_CAPACITY" | "ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR" | "NETWORK_CONNECTION_ERROR" | "INITIALIZATION_SCRIPT_ERROR" | "DECRYPT_STREAMING_IMAGE_ERROR" | "NETWORK_INTERFACE_ERROR" | "STREAMING_SESSION_STOPPED" | "STREAMING_SESSION_STARTED" | "STREAMING_SESSION_STOP_IN_PROGRESS" | "STREAMING_SESSION_START_IN_PROGRESS" | "AMI_VALIDATION_ERROR"
object StreamingSessionStatusCode {
  inline val STREAMING_SESSION_READY: "STREAMING_SESSION_READY" = "STREAMING_SESSION_READY"
  inline val STREAMING_SESSION_DELETED: "STREAMING_SESSION_DELETED" = "STREAMING_SESSION_DELETED"
  inline val STREAMING_SESSION_CREATE_IN_PROGRESS: "STREAMING_SESSION_CREATE_IN_PROGRESS" = "STREAMING_SESSION_CREATE_IN_PROGRESS"
  inline val STREAMING_SESSION_DELETE_IN_PROGRESS: "STREAMING_SESSION_DELETE_IN_PROGRESS" = "STREAMING_SESSION_DELETE_IN_PROGRESS"
  inline val INTERNAL_ERROR: "INTERNAL_ERROR" = "INTERNAL_ERROR"
  inline val INSUFFICIENT_CAPACITY: "INSUFFICIENT_CAPACITY" = "INSUFFICIENT_CAPACITY"
  inline val ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR: "ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR" = "ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR"
  inline val NETWORK_CONNECTION_ERROR: "NETWORK_CONNECTION_ERROR" = "NETWORK_CONNECTION_ERROR"
  inline val INITIALIZATION_SCRIPT_ERROR: "INITIALIZATION_SCRIPT_ERROR" = "INITIALIZATION_SCRIPT_ERROR"
  inline val DECRYPT_STREAMING_IMAGE_ERROR: "DECRYPT_STREAMING_IMAGE_ERROR" = "DECRYPT_STREAMING_IMAGE_ERROR"
  inline val NETWORK_INTERFACE_ERROR: "NETWORK_INTERFACE_ERROR" = "NETWORK_INTERFACE_ERROR"
  inline val STREAMING_SESSION_STOPPED: "STREAMING_SESSION_STOPPED" = "STREAMING_SESSION_STOPPED"
  inline val STREAMING_SESSION_STARTED: "STREAMING_SESSION_STARTED" = "STREAMING_SESSION_STARTED"
  inline val STREAMING_SESSION_STOP_IN_PROGRESS: "STREAMING_SESSION_STOP_IN_PROGRESS" = "STREAMING_SESSION_STOP_IN_PROGRESS"
  inline val STREAMING_SESSION_START_IN_PROGRESS: "STREAMING_SESSION_START_IN_PROGRESS" = "STREAMING_SESSION_START_IN_PROGRESS"
  inline val AMI_VALIDATION_ERROR: "AMI_VALIDATION_ERROR" = "AMI_VALIDATION_ERROR"

  inline def values: js.Array[StreamingSessionStatusCode] = js.Array(
    STREAMING_SESSION_READY,
    STREAMING_SESSION_DELETED,
    STREAMING_SESSION_CREATE_IN_PROGRESS,
    STREAMING_SESSION_DELETE_IN_PROGRESS,
    INTERNAL_ERROR,
    INSUFFICIENT_CAPACITY,
    ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR,
    NETWORK_CONNECTION_ERROR,
    INITIALIZATION_SCRIPT_ERROR,
    DECRYPT_STREAMING_IMAGE_ERROR,
    NETWORK_INTERFACE_ERROR,
    STREAMING_SESSION_STOPPED,
    STREAMING_SESSION_STARTED,
    STREAMING_SESSION_STOP_IN_PROGRESS,
    STREAMING_SESSION_START_IN_PROGRESS,
    AMI_VALIDATION_ERROR
  )
}

type StreamingSessionStorageMode = "UPLOAD"
object StreamingSessionStorageMode {
  inline val UPLOAD: "UPLOAD" = "UPLOAD"

  inline def values: js.Array[StreamingSessionStorageMode] = js.Array(UPLOAD)
}

type StreamingSessionStreamState = "READY" | "CREATE_IN_PROGRESS" | "DELETE_IN_PROGRESS" | "DELETED" | "CREATE_FAILED" | "DELETE_FAILED"
object StreamingSessionStreamState {
  inline val READY: "READY" = "READY"
  inline val CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS" = "CREATE_IN_PROGRESS"
  inline val DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS" = "DELETE_IN_PROGRESS"
  inline val DELETED: "DELETED" = "DELETED"
  inline val CREATE_FAILED: "CREATE_FAILED" = "CREATE_FAILED"
  inline val DELETE_FAILED: "DELETE_FAILED" = "DELETE_FAILED"

  inline def values: js.Array[StreamingSessionStreamState] = js.Array(READY, CREATE_IN_PROGRESS, DELETE_IN_PROGRESS, DELETED, CREATE_FAILED, DELETE_FAILED)
}

type StreamingSessionStreamStatusCode = "STREAM_CREATE_IN_PROGRESS" | "STREAM_READY" | "STREAM_DELETE_IN_PROGRESS" | "STREAM_DELETED" | "INTERNAL_ERROR" | "NETWORK_CONNECTION_ERROR"
object StreamingSessionStreamStatusCode {
  inline val STREAM_CREATE_IN_PROGRESS: "STREAM_CREATE_IN_PROGRESS" = "STREAM_CREATE_IN_PROGRESS"
  inline val STREAM_READY: "STREAM_READY" = "STREAM_READY"
  inline val STREAM_DELETE_IN_PROGRESS: "STREAM_DELETE_IN_PROGRESS" = "STREAM_DELETE_IN_PROGRESS"
  inline val STREAM_DELETED: "STREAM_DELETED" = "STREAM_DELETED"
  inline val INTERNAL_ERROR: "INTERNAL_ERROR" = "INTERNAL_ERROR"
  inline val NETWORK_CONNECTION_ERROR: "NETWORK_CONNECTION_ERROR" = "NETWORK_CONNECTION_ERROR"

  inline def values: js.Array[StreamingSessionStreamStatusCode] = js.Array(STREAM_CREATE_IN_PROGRESS, STREAM_READY, STREAM_DELETE_IN_PROGRESS, STREAM_DELETED, INTERNAL_ERROR, NETWORK_CONNECTION_ERROR)
}

type StudioComponentInitializationScriptRunContext = "SYSTEM_INITIALIZATION" | "USER_INITIALIZATION"
object StudioComponentInitializationScriptRunContext {
  inline val SYSTEM_INITIALIZATION: "SYSTEM_INITIALIZATION" = "SYSTEM_INITIALIZATION"
  inline val USER_INITIALIZATION: "USER_INITIALIZATION" = "USER_INITIALIZATION"

  inline def values: js.Array[StudioComponentInitializationScriptRunContext] = js.Array(SYSTEM_INITIALIZATION, USER_INITIALIZATION)
}

/** The current state of the studio component resource. While a studio component is being created, modified, or deleted, its state will equal "CREATE_IN_PROGRESS", "UPDATE_IN_PROGRESS", or "DELETE_IN_PROGRESS" These are called 'transition states'. No modifications may be made to the studio component while it is in a transition state. If creation of the resource fails, the state will change to `CREATE_FAILED`. The resource StatusCode and StatusMessage will provide more information of why creation failed. The resource in this state will automatically be deleted from your account after a period of time. If updating the resource fails, the state will change to `UPDATE_FAILED`. The resource StatusCode and StatusMessage will provide more information of why the update failed. The resource will be returned to the state it was in when the update request was invoked. If deleting the resource fails, the state will change to `DELETE_FAILED`. The resource StatusCode and StatusMessage will provide
  * more information of why the update failed. The resource will be returned to the state it was in when the update request was invoked. After the resource is deleted successfully, it will change to the "DELETED" state. The resource will no longer count against service quotas and cannot be used or acted upon any futher. It will be removed from your account after a period of time.
  */
type StudioComponentState = "CREATE_IN_PROGRESS" | "READY" | "UPDATE_IN_PROGRESS" | "DELETE_IN_PROGRESS" | "DELETED" | "DELETE_FAILED" | "CREATE_FAILED" | "UPDATE_FAILED"
object StudioComponentState {
  inline val CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS" = "CREATE_IN_PROGRESS"
  inline val READY: "READY" = "READY"
  inline val UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS" = "UPDATE_IN_PROGRESS"
  inline val DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS" = "DELETE_IN_PROGRESS"
  inline val DELETED: "DELETED" = "DELETED"
  inline val DELETE_FAILED: "DELETE_FAILED" = "DELETE_FAILED"
  inline val CREATE_FAILED: "CREATE_FAILED" = "CREATE_FAILED"
  inline val UPDATE_FAILED: "UPDATE_FAILED" = "UPDATE_FAILED"

  inline def values: js.Array[StudioComponentState] = js.Array(CREATE_IN_PROGRESS, READY, UPDATE_IN_PROGRESS, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, CREATE_FAILED, UPDATE_FAILED)
}

/** The current status of the studio component resource. When the resource is in the 'READY' state, the status code signals what the last mutation made to the resource was. When the resource is in a CREATE_FAILED/UPDATE_FAILED/DELETE_FAILED state, the status code signals what went wrong and why the mutation failed.
  */
type StudioComponentStatusCode = "ACTIVE_DIRECTORY_ALREADY_EXISTS" | "STUDIO_COMPONENT_CREATED" | "STUDIO_COMPONENT_UPDATED" | "STUDIO_COMPONENT_DELETED" | "ENCRYPTION_KEY_ACCESS_DENIED" | "ENCRYPTION_KEY_NOT_FOUND" | "STUDIO_COMPONENT_CREATE_IN_PROGRESS" | "STUDIO_COMPONENT_UPDATE_IN_PROGRESS" | "STUDIO_COMPONENT_DELETE_IN_PROGRESS" | "INTERNAL_ERROR"
object StudioComponentStatusCode {
  inline val ACTIVE_DIRECTORY_ALREADY_EXISTS: "ACTIVE_DIRECTORY_ALREADY_EXISTS" = "ACTIVE_DIRECTORY_ALREADY_EXISTS"
  inline val STUDIO_COMPONENT_CREATED: "STUDIO_COMPONENT_CREATED" = "STUDIO_COMPONENT_CREATED"
  inline val STUDIO_COMPONENT_UPDATED: "STUDIO_COMPONENT_UPDATED" = "STUDIO_COMPONENT_UPDATED"
  inline val STUDIO_COMPONENT_DELETED: "STUDIO_COMPONENT_DELETED" = "STUDIO_COMPONENT_DELETED"
  inline val ENCRYPTION_KEY_ACCESS_DENIED: "ENCRYPTION_KEY_ACCESS_DENIED" = "ENCRYPTION_KEY_ACCESS_DENIED"
  inline val ENCRYPTION_KEY_NOT_FOUND: "ENCRYPTION_KEY_NOT_FOUND" = "ENCRYPTION_KEY_NOT_FOUND"
  inline val STUDIO_COMPONENT_CREATE_IN_PROGRESS: "STUDIO_COMPONENT_CREATE_IN_PROGRESS" = "STUDIO_COMPONENT_CREATE_IN_PROGRESS"
  inline val STUDIO_COMPONENT_UPDATE_IN_PROGRESS: "STUDIO_COMPONENT_UPDATE_IN_PROGRESS" = "STUDIO_COMPONENT_UPDATE_IN_PROGRESS"
  inline val STUDIO_COMPONENT_DELETE_IN_PROGRESS: "STUDIO_COMPONENT_DELETE_IN_PROGRESS" = "STUDIO_COMPONENT_DELETE_IN_PROGRESS"
  inline val INTERNAL_ERROR: "INTERNAL_ERROR" = "INTERNAL_ERROR"

  inline def values: js.Array[StudioComponentStatusCode] = js.Array(
    ACTIVE_DIRECTORY_ALREADY_EXISTS,
    STUDIO_COMPONENT_CREATED,
    STUDIO_COMPONENT_UPDATED,
    STUDIO_COMPONENT_DELETED,
    ENCRYPTION_KEY_ACCESS_DENIED,
    ENCRYPTION_KEY_NOT_FOUND,
    STUDIO_COMPONENT_CREATE_IN_PROGRESS,
    STUDIO_COMPONENT_UPDATE_IN_PROGRESS,
    STUDIO_COMPONENT_DELETE_IN_PROGRESS,
    INTERNAL_ERROR
  )
}

type StudioComponentSubtype = "AWS_MANAGED_MICROSOFT_AD" | "AMAZON_FSX_FOR_WINDOWS" | "AMAZON_FSX_FOR_LUSTRE" | "CUSTOM"
object StudioComponentSubtype {
  inline val AWS_MANAGED_MICROSOFT_AD: "AWS_MANAGED_MICROSOFT_AD" = "AWS_MANAGED_MICROSOFT_AD"
  inline val AMAZON_FSX_FOR_WINDOWS: "AMAZON_FSX_FOR_WINDOWS" = "AMAZON_FSX_FOR_WINDOWS"
  inline val AMAZON_FSX_FOR_LUSTRE: "AMAZON_FSX_FOR_LUSTRE" = "AMAZON_FSX_FOR_LUSTRE"
  inline val CUSTOM: "CUSTOM" = "CUSTOM"

  inline def values: js.Array[StudioComponentSubtype] = js.Array(AWS_MANAGED_MICROSOFT_AD, AMAZON_FSX_FOR_WINDOWS, AMAZON_FSX_FOR_LUSTRE, CUSTOM)
}

type StudioComponentType = "ACTIVE_DIRECTORY" | "SHARED_FILE_SYSTEM" | "COMPUTE_FARM" | "LICENSE_SERVICE" | "CUSTOM"
object StudioComponentType {
  inline val ACTIVE_DIRECTORY: "ACTIVE_DIRECTORY" = "ACTIVE_DIRECTORY"
  inline val SHARED_FILE_SYSTEM: "SHARED_FILE_SYSTEM" = "SHARED_FILE_SYSTEM"
  inline val COMPUTE_FARM: "COMPUTE_FARM" = "COMPUTE_FARM"
  inline val LICENSE_SERVICE: "LICENSE_SERVICE" = "LICENSE_SERVICE"
  inline val CUSTOM: "CUSTOM" = "CUSTOM"

  inline def values: js.Array[StudioComponentType] = js.Array(ACTIVE_DIRECTORY, SHARED_FILE_SYSTEM, COMPUTE_FARM, LICENSE_SERVICE, CUSTOM)
}

/** The type of KMS key that is used to encrypt studio data.
  */
type StudioEncryptionConfigurationKeyType = "AWS_OWNED_KEY" | "CUSTOMER_MANAGED_KEY"
object StudioEncryptionConfigurationKeyType {
  inline val AWS_OWNED_KEY: "AWS_OWNED_KEY" = "AWS_OWNED_KEY"
  inline val CUSTOMER_MANAGED_KEY: "CUSTOMER_MANAGED_KEY" = "CUSTOMER_MANAGED_KEY"

  inline def values: js.Array[StudioEncryptionConfigurationKeyType] = js.Array(AWS_OWNED_KEY, CUSTOMER_MANAGED_KEY)
}

type StudioPersona = "ADMINISTRATOR"
object StudioPersona {
  inline val ADMINISTRATOR: "ADMINISTRATOR" = "ADMINISTRATOR"

  inline def values: js.Array[StudioPersona] = js.Array(ADMINISTRATOR)
}

type StudioState = "CREATE_IN_PROGRESS" | "READY" | "UPDATE_IN_PROGRESS" | "DELETE_IN_PROGRESS" | "DELETED" | "DELETE_FAILED" | "CREATE_FAILED" | "UPDATE_FAILED"
object StudioState {
  inline val CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS" = "CREATE_IN_PROGRESS"
  inline val READY: "READY" = "READY"
  inline val UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS" = "UPDATE_IN_PROGRESS"
  inline val DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS" = "DELETE_IN_PROGRESS"
  inline val DELETED: "DELETED" = "DELETED"
  inline val DELETE_FAILED: "DELETE_FAILED" = "DELETE_FAILED"
  inline val CREATE_FAILED: "CREATE_FAILED" = "CREATE_FAILED"
  inline val UPDATE_FAILED: "UPDATE_FAILED" = "UPDATE_FAILED"

  inline def values: js.Array[StudioState] = js.Array(CREATE_IN_PROGRESS, READY, UPDATE_IN_PROGRESS, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, CREATE_FAILED, UPDATE_FAILED)
}

/** The status code.
  */
type StudioStatusCode = "STUDIO_CREATED" | "STUDIO_DELETED" | "STUDIO_UPDATED" | "STUDIO_CREATE_IN_PROGRESS" | "STUDIO_UPDATE_IN_PROGRESS" | "STUDIO_DELETE_IN_PROGRESS" | "STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED" | "STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED" | "STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED" | "AWS_SSO_NOT_ENABLED" | "AWS_SSO_ACCESS_DENIED" | "ROLE_NOT_OWNED_BY_STUDIO_OWNER" | "ROLE_COULD_NOT_BE_ASSUMED" | "INTERNAL_ERROR" | "ENCRYPTION_KEY_NOT_FOUND" | "ENCRYPTION_KEY_ACCESS_DENIED" | "AWS_SSO_CONFIGURATION_REPAIRED" | "AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS"
object StudioStatusCode {
  inline val STUDIO_CREATED: "STUDIO_CREATED" = "STUDIO_CREATED"
  inline val STUDIO_DELETED: "STUDIO_DELETED" = "STUDIO_DELETED"
  inline val STUDIO_UPDATED: "STUDIO_UPDATED" = "STUDIO_UPDATED"
  inline val STUDIO_CREATE_IN_PROGRESS: "STUDIO_CREATE_IN_PROGRESS" = "STUDIO_CREATE_IN_PROGRESS"
  inline val STUDIO_UPDATE_IN_PROGRESS: "STUDIO_UPDATE_IN_PROGRESS" = "STUDIO_UPDATE_IN_PROGRESS"
  inline val STUDIO_DELETE_IN_PROGRESS: "STUDIO_DELETE_IN_PROGRESS" = "STUDIO_DELETE_IN_PROGRESS"
  inline val STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED: "STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED" = "STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED"
  inline val STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED: "STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED" = "STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED"
  inline val STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED: "STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED" = "STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED"
  inline val AWS_SSO_NOT_ENABLED: "AWS_SSO_NOT_ENABLED" = "AWS_SSO_NOT_ENABLED"
  inline val AWS_SSO_ACCESS_DENIED: "AWS_SSO_ACCESS_DENIED" = "AWS_SSO_ACCESS_DENIED"
  inline val ROLE_NOT_OWNED_BY_STUDIO_OWNER: "ROLE_NOT_OWNED_BY_STUDIO_OWNER" = "ROLE_NOT_OWNED_BY_STUDIO_OWNER"
  inline val ROLE_COULD_NOT_BE_ASSUMED: "ROLE_COULD_NOT_BE_ASSUMED" = "ROLE_COULD_NOT_BE_ASSUMED"
  inline val INTERNAL_ERROR: "INTERNAL_ERROR" = "INTERNAL_ERROR"
  inline val ENCRYPTION_KEY_NOT_FOUND: "ENCRYPTION_KEY_NOT_FOUND" = "ENCRYPTION_KEY_NOT_FOUND"
  inline val ENCRYPTION_KEY_ACCESS_DENIED: "ENCRYPTION_KEY_ACCESS_DENIED" = "ENCRYPTION_KEY_ACCESS_DENIED"
  inline val AWS_SSO_CONFIGURATION_REPAIRED: "AWS_SSO_CONFIGURATION_REPAIRED" = "AWS_SSO_CONFIGURATION_REPAIRED"
  inline val AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS: "AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS" = "AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS"

  inline def values: js.Array[StudioStatusCode] = js.Array(
    STUDIO_CREATED,
    STUDIO_DELETED,
    STUDIO_UPDATED,
    STUDIO_CREATE_IN_PROGRESS,
    STUDIO_UPDATE_IN_PROGRESS,
    STUDIO_DELETE_IN_PROGRESS,
    STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED,
    STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED,
    STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED,
    AWS_SSO_NOT_ENABLED,
    AWS_SSO_ACCESS_DENIED,
    ROLE_NOT_OWNED_BY_STUDIO_OWNER,
    ROLE_COULD_NOT_BE_ASSUMED,
    INTERNAL_ERROR,
    ENCRYPTION_KEY_NOT_FOUND,
    ENCRYPTION_KEY_ACCESS_DENIED,
    AWS_SSO_CONFIGURATION_REPAIRED,
    AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS
  )
}
